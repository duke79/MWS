
April 30, 2015

This provides a guide to recent corrections to MW.  For this purpose,
the homophone modification programs (removeHom, modHier, newHom) may be
viewed as a black box. Not only does this black box generate new markup
to MW, but by applying a rational process it provides a context in which
'oddities' may be recognized in the digitization.  Many of these oddities
turn out to be due to errors in the digitization of MW, which may be 
corrected.

The details of individual corrections are usually quite tedious to explain,
or even understand.
For the benefit of anyone (including me!) who might want to reexamine some
of the corrections,  some material is provided;  hopefully this material
provides enough context for such reexamination.

The material is in the form of files in the updlogs subdirectory herein.
This readme_corrections file is essential a guide to the updlogs material.

There are two primary sequences of files in updlogs:
 log_201504DD-NN.txt  The corrections made to the MW database records.
       Only the corrected (new) forms are shown.
 notes_201504DD-NN.txt This contains the uncorrected (old) forms of records
   involved in the corrections.  Also, some comments indicate the nature of
   the corrections made.  

misc.txt contains some notes that need further attention.


Procedurally, a notes file was generated by some program (such as prep1.py).
  Then, the cases of the notes file were individually examined, the needed
  corrections discovered and mentioned as comments, and then the appropriate
  corrections were entered into the correcsponding log file.


Corrections of 20150408
-----------------------
These 22 cases occurred because (in a certain technical sense hard to 
explain), the total number of rational homophones was wrong.  In all these
cases there was some error in the sequencing of records in MW.
prenotes_20150408-01.txt  shows basic sequence info for the cases.
For instance, aDri at L=3858.5 was misplaced among the 'adri' records.

From notes_20150408-01, the comment says what needs to be changed.
; case 1: delete aDri from L=3858.5, and insert it at 4713.1
<H1A><h><hc3>110</hc3><key1>aDri</key1><hc1>1</hc1><key2>/a-Dri</key2></h>
<body> <c>press-stone</c>_;_<s>gr/AvA /adriH</s><ls>AV._v_,_20_,_10.</ls> 
</body><tail><MW>003333</MW> <pc>23,3</pc><pc type="rev">1310,3</pc> 
<L revL="304370">3858.5</L></tail></H1A>
From log_20150408-01, we see the exact corrections made:
Delete
<L>3858.5</L>
<H1A><h><hc3>110</hc3><key1>aDri</key1><hc1>1</hc1><key2>/a-Dri</key2></h><body> <c>press-stone</c>_;_<s>gr/AvA /adriH</s><ls>AV._v_,_20_,_10.</ls> </body><tail><MW>003333</MW> <pc>23,3</pc><pc type="rev">1310,3</pc> <L revL="304370">3858.5</L></tail></H1A>
Insert
<L>4713.1</L>
<H1A><h><hc3>110</hc3><key1>aDri</key1><hc1>1</hc1><key2>/a-Dri</key2></h><body> <c>press-stone</c>_;_<s>gr/AvA /adriH</s><ls>AV._v_,_20_,_10.</ls> </body><tail><MW>003333</MW> <pc>23,3</pc><pc type="rev">1310,3</pc> <L revL="304370">4713.1</L></tail></H1A>

The other cases of 20150408 are similar.


Corrections of 20150410
-----------------------
110 cases.

The newHom program identifies records of MW that SHOULD have a homonym assigned.
If there is already a <hom> tag with a numerical homonym number (1,2,etc), then
that is accepted.  However, if there is no homonym number assigned, then
it provisionally adds a homonym number of '0' (Later, newHom goes through all
the records with '0' homonyms, and assigns them a letter homonym 'a','b', etc.,
based on the L-number sequencing.)

Now sometimes it can happen that one headword has a record with homonym=1, and
one or more '0' homonyms.  It is likely that a homonym=2 is missing, and needs
to be corrected.  These are the cases examined in 20150410.

For examine, in the notes_20150410-01.txt file, the first case is
aDyuzita. Before correction, the L=4693 case was wrongly marked as an H1A
subsidiary to L=4692, whereas, the print version shows that L=4693 should have
a separate hom=2 marked.   The log_20150410-01 file shows the changes to 
L=4693.  Note that no change was needed for the L=4387 (which might
be called a 'referential' homonym).

The rest are similar.

Corrections of 20150412-01  (TODO)
-------------------------
After corrections of 20150410 were made, there were still a few cases with
the same problem condition (a hom=1 with no hom=0).  An examination of the
text shows the digitization conforms to print in these cases. The question
remains - where is the hom=2? or should the hom=1 of the print be considered
an error?  (the log_20150412-01.txt file is empty)

Corrections of 20150412-02
--------------------------
155 cases (selected by prep1.py)  where there is a '0' hom and one other hom,
 such as '2'.
These cases (notes_20150412-02.txt and log_20150412-02.txt) are quite similar
to the 20150410-01 cases.  
Note 1:  Some ancillary systematic errors in the digitization were corrected
  as there were noticed. For instance,
 a. Often the record prior to the hom=0 record has a bogus number at the
  end of the record.  e.g., at L=7721 there was <c>1.</c> at the end of the
  record.  That '1' was really the homonym number for the next record (7722),
  so it should be deleted from 7721.
 b. The <hom> tag we are primarily changing is placed just after <key2>.
  However, in the <body> there are numbers which are homonym numbers and should
  be so marked.  For instance, at L=29470 before correction one had:
  <c>for_2.</c>~<see/>~ <ab>s.v.</ab>  and this was changed to
  <c>for_<hom>2</hom>.</c>~<see/>~ <ab>s.v.</ab>

Cases of 20150414-01 and -02 TODO
---------------------------------
These are reruns after the corrections of 20150412-02.
They still remain unresolved.  20150414-01 is same as 20150412-01


TODO (Apr 30, 2015)
-------------------
1. There are numerous wrongly placed homonym codes (as in Note 1a above) that
remain to be corrected.
2. There may be further systematic cases that can be mined for correction
   candidates.  The file newHom_log-20150413.txt in updlogs would be the
   place to look. Here's how to read the lines of this file, taking first
   line as example:
   ajana 2031 2057 2061  0 1 2 -----a 1 2
   Headword ajana.  Three records identified as rational homonyms.  First
   initially unmarked, second and third marked with 1 and 2.  newHom
   introduces synthetic <hom>a</hom> for L=2031.  Examining the display of
   ajana in MW, we see the L=2031 is a 'referential' homonym. - There is
   no digitization error.
   Probably all the 0 1 2 cases are like this.
   Another example is:
   anyatas 8580 8640 8706  0 0 0 -----a b c
   Here this also is ok.  8580 and 8706 are referential homonyms. There is
   no homonym number in 8640 in the text.

   A different kind of case is:
   pramApaRa 135887 135913 135914 135937  0 1 2 2 -----a 1 2a 2b CHK ERR

   But, maybe there is some pattern not yet noticed that does systematically
   indicate a digitization error.
   There are 478 cases in this file.  So it would be tedious, but perhaps
   not prohibitively tedious, to  examine all of the cases.


